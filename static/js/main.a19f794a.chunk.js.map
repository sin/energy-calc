{"version":3,"sources":["simulator/constants.js","store.js","components/Slider/Slider.js","components/InfoBox/InfoBox.js","simulator/utils.js","components/ComparisonTable/ComparisonTable.js","simulator/getAvailable.js","simulator/getPowers.js","simulator/getExternalities.js","simulator/index.js","simulator/getEnergy.js","components/App/App.js","serviceWorker.js","index.js"],"names":["LABELS","KEYS","INSTALLED_TODAY","nuclear","hydro","wind","solar","chp","gas","coal","oil","demand","MAX_POWERS","CAPACITY_FACTORS","CO2","WASTE","FUEL","POWER_COOF","ls","window","localStorage","STORE_KEY","load","data","getItem","JSON","parse","reset","setItem","stringify","Slider","name","value","update","className","maxValue","minValue","step","onChange","InfoBox","unit","type","powerToEnergy","power","sum","a","b","average","array","reduce","length","round","places","factor","Math","roundTo","transpose","Object","keys","map","column","row","formatNumber","multiply","Number","toFixed","toLocaleString","identity","Header","values","formatFn","totalLabel","index","key","Row","title","format","total","ComparisonTable","current","proposed","totalFn","diff","currentValue","totalCurrent","totalProposed","totalDiff","isHeader","getAvailable","installed","entries","filter","powerType","INTERVALS","start","Array","from","_","range","REGULATING","NON_REGULATING","IS_WEATHER_DEPENDANT","getPowers","powerTable","interval","powers","max","polystep","i","pow","getUtulizationFactor","averageDemand","demands","calculateAverageDemand","nonRegulatingPowers","baseload","min","regulating1","regulating2","production","calculateRegulatingPowerDemand","regulatingDemand","hydroAvailable","gasAvailable","oilAvailable","regulating","nonRegulating","renewables","deficit","types","getExternalities","energy","table","co2","fuel","waste","getData","available","totalEnergy","totalInstalled","totalAvailable","ratio","totalCO2","totalWaste","totalFuel","store","defaultState","isDetails","today","results","App","props","state","bind","toggleDetails","this","setState","currentState","hasDeficit","console","log","onClick","arr","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a19f794a.chunk.js","sourcesContent":["export const LABELS = ['Atom', 'Hydro', 'Wiatr', 'Słońce', 'CHP', 'Gaz', 'Węgiel', 'Ropa']\nexport const KEYS = ['nuclear', 'hydro', 'wind', 'solar', 'chp', 'gas', 'coal', 'oil']\n\nexport const INSTALLED_TODAY = {\n  nuclear: 0,\n  hydro: 893,\n  wind: 1374,\n  solar: 4947,\n  chp: 2751,\n  gas: 1956,\n  coal: 30276,\n  oil: 0,\n  demand: 27600\n}\n\nexport const MAX_POWERS = {\n  nuclear: 1,\n  hydro: 0.42,\n  wind: 0.7,\n  solar: 0.65,\n  chp: 0.75,\n  gas: 1,\n  coal: 0.6,\n  oil: 1,\n  demand: 1\n}\n\nexport const MAX_CAPACITY = {\n  nuclear: 7884,\n  hydro: 3700,\n  wind: 2630,\n  solar: 1000,\n  chp: 3050,\n  gas: 7884,\n  coal: 7884,\n  oil: 7884\n}\n\nexport const CAPACITY_FACTORS = {\n  nuclear: 0.9,\n  hydro: 0.82,\n  wind: 0.9,\n  solar: 0,\n  chp: 0.77,\n  gas: 0.9,\n  coal: 0.7,\n  oil: 0.9\n}\n\n// grams / kWh\nexport const CO2 = {\n  nuclear: 5,\n  hydro: 9,\n  wind: 15,\n  solar: 46,\n  chp: 15,\n  gas: 515,\n  coal: 881,\n  oil: 993\n}\n\nexport const WASTE = {\n  nuclear: 0.005,\n  hydro: 0,\n  wind: 0,\n  solar: 0,\n  chp: 15,\n  gas: 0,\n  coal: 37,\n  oil: 0\n}\n\nexport const FUEL = {\n  nuclear: 0.005,\n  hydro: 0,\n  wind: 0,\n  solar: 0,\n  chp: 1000,\n  gas: 187,\n  coal: 379,\n  oil: 331\n}\n\nexport const POWER_COOF = {\n  nuclear: [\n    2.60027483362602e-12,\n    -4.21522717629026e-10,\n    8.43915935489853e-9,\n    8.25183318068457e-7,\n    -1.04055498388049e-5,\n    -0.00395592006246061\n  ],\n  wind: [\n    2.32518114747708e-11,\n    -8.24592229234651e-9,\n    1.13347571282831e-6,\n    -7.65761024246728e-5,\n    0.00267572948815116,\n    -0.0521660174799689\n  ],\n  solar: [\n    3.49355320699972e-10,\n    -8.72092274335658e-8,\n    8.13600796546478e-6,\n    -0.000372701904416939,\n    0.0091188719947563,\n    -0.123030025850834\n  ],\n  chp: [0, 0, -8.66564795646319e-9, 1.28246828222672e-6, 1.86719686851292e-5, -0.0139171520689115],\n  coal: [\n    2.60027483362602e-12,\n    -4.21522717629026e-10,\n    8.43915935489853e-9,\n    8.25183318068457e-7,\n    -1.04055498388049e-5,\n    -0.00395592006246061\n  ],\n  demand: [\n    5.22305012772976e-12,\n    -1.99919545823719e-9,\n    2.84634493734413e-7,\n    -1.96831546062457e-5,\n    0.000718706830438671,\n    -0.0176184293258551\n  ]\n}\n","import { INSTALLED_TODAY } from './simulator/constants'\n\nconst ls = window.localStorage\nconst STORE_KEY = 'energy-calc-data'\n\nexport function save(data) {\n  ls.setItem(STORE_KEY, JSON.stringify(data))\n}\n\nexport function load() {\n  const data = ls.getItem(STORE_KEY)\n  if (data) return JSON.parse(data)\n\n  reset()\n  return INSTALLED_TODAY\n}\n\nexport function reset() {\n  ls.setItem(STORE_KEY, JSON.stringify(INSTALLED_TODAY))\n  return load()\n}\n","import React from 'react'\nimport InputRange from 'react-input-range'\n\nimport 'react-input-range/lib/css/index.css'\nimport './Slider.css'\n\nexport default function Slider({ name, value, update }) {\n  return (\n    <div className=\"Slider\">\n      <div className=\"Slider__label\">\n        <div className=\"Slider__name\">{name}</div>\n        <div className=\"Slider__value\">\n          {value}\n          <span className=\"Slider__unit\">{' MW'}</span>\n        </div>\n      </div>\n      <InputRange maxValue={35000} minValue={0} step={500} value={value} onChange={update} />\n    </div>\n  )\n}\n","import React from 'react'\nimport './InfoBox.css'\n\nexport default function InfoBox({ name, value, unit, type = '' }) {\n  return (\n    <div className=\"InfoBox\">\n      <span className=\"InfoBox__name\">{name}</span>\n      <span className={`InfoBox__value ${type}`}>{value}</span>\n      <span className=\"InfoBox__unit\">{unit}</span>\n    </div>\n  )\n}\n","/**\n * converts MW to TWh per year\n */\nexport const powerToEnergy = power => (power * 8760) / 1e6\n\n/**\n * sums two values\n */\nexport const sum = (a, b) => a + b\n\n/**\n * calculates average of values in array\n */\nexport const average = array => array.reduce(sum) / array.length\n\n/**\n * creates numbers range\n */\nexport const range = (length, step = 1, start = 0) =>\n  Array.from({ length }, (_, index) => start + index * step)\n\n/**\n * round to x decimal places\n */\nexport const roundTo = (places = 0) => value => {\n  const factor = 10 ** places\n  return Math.round(value * factor) / factor\n}\n\n/**\n * round to 1 decimal place\n */\nexport const round = roundTo(1)\n\n/**\n * transpose array\n */\nexport const transpose = array => Object.keys(array[0]).map(column => array.map(row => row[column]))\n\n/**\n * formatting\n */\nexport const formatNumber = multiply => value =>\n  Number((value / 10 ** multiply).toFixed(1)).toLocaleString()\n\n/**\n *\n */\nexport const identity = value => value\n","import React from 'react'\nimport { LABELS } from '../../simulator/constants'\nimport { round, identity } from '../../simulator/utils'\nimport './ComparisonTable.css'\n\nfunction Header({ values, formatFn = identity, totalLabel }) {\n  return (\n    <tr>\n      <th>{''}</th>\n      {values.map(formatFn).map((value, index) => (\n        <th key={index}>{value}</th>\n      ))}\n      {totalLabel ? <th>{totalLabel}</th> : null}\n    </tr>\n  )\n}\n\nfunction Row({ title = '', values, format = identity, total = null }) {\n  return (\n    <tr>\n      <td>{title}</td>\n      {values.map(format).map((value, index) => (\n        <td key={index}>{value}</td>\n      ))}\n      {total !== null ? <td>{format(total)}</td> : null}\n    </tr>\n  )\n}\n\nexport default function ComparisonTable({\n  current,\n  proposed,\n  totalLabel = '',\n  totalFn,\n  format = round\n}) {\n  const diff = current.map((currentValue, index) => proposed[index] - currentValue)\n  const [totalCurrent, totalProposed, totalDiff] = totalFn\n    ? [totalFn(current), totalFn(proposed), totalFn(diff)]\n    : []\n\n  return (\n    <table className=\"ComparisonTable\">\n      <thead>\n        <Header values={LABELS} isHeader={true} totalLabel={totalLabel}></Header>\n      </thead>\n      <tbody>\n        <Row values={current} title=\"Aktualny miks\" format={format} total={totalCurrent}></Row>\n        <Row values={proposed} title=\"Proponowany miks\" format={format} total={totalProposed}></Row>\n        <Row values={diff} title=\"Różnica\" format={format} total={totalDiff}></Row>\n      </tbody>\n    </table>\n  )\n}\n","import { CAPACITY_FACTORS } from './constants'\nimport { round } from './utils'\n\nexport const getAvailable = installed => {\n  return Object.entries(installed)\n    .filter(([powerType]) => powerType !== 'demand')\n    .map(([powerType, installed]) => installed * CAPACITY_FACTORS[powerType])\n    .map(round)\n}\n","import { POWER_COOF, MAX_POWERS } from './constants'\nimport { sum, range } from './utils'\n\nconst INTERVALS = range(21, 5)\nconst REGULATING = ['hydro', 'gas', 'oil']\nconst NON_REGULATING = ['demand', 'nuclear', 'chp', 'coal', 'wind', 'solar']\nconst IS_WEATHER_DEPENDANT = [false, false, false, true, true] // [\"Nuclear\", \"CHP\", \"Coal\", \"Wind\", \"Solar\"]\n\nconst calculateAverageDemand = powerTable => {\n  const demands = powerTable.map(([, demand]) => demand)\n  return Math.round(demands.reduce(sum) / (demands.length + 1))\n}\n\nconst calculateRegulatingPowerDemand = (powers, demand, averageDemand) => {\n  // don't add more weather dependent power if it exceeds average demand\n  const production = powers\n    .map((value, key) => (IS_WEATHER_DEPENDANT[key] ? Math.min(value, averageDemand) : value))\n    .reduce(sum)\n\n  return Math.max(0, demand - production)\n}\n\n/**\n * Calculates utilization factor from powerCoof\n *\n * the share of maximum operational power that is turned off\n * when demand is low, 1 === 100% on\n *\n * @param {number} interval\n * @param {string} powerType\n */\nconst getUtulizationFactor = (interval, powerType) =>\n  1 + POWER_COOF[powerType].map((polystep, i) => polystep * Math.pow(interval, 6 - i)).reduce(sum)\n\n/**\n * Creates table with the power duration\n * power in 5 percent time intervals, 0-100 percent\n */\nexport const getPowers = installed => {\n  const powerTable = INTERVALS.map(interval => {\n    const powers = NON_REGULATING.map(powerType => {\n      const max = installed[powerType] * MAX_POWERS[powerType]\n      const power = Math.round(max * getUtulizationFactor(interval, powerType))\n\n      return Math.max(0, power)\n    })\n\n    return [interval, ...powers]\n  })\n\n  const averageDemand = calculateAverageDemand(powerTable)\n\n  return powerTable.map(row => {\n    const [interval, demand, ...nonRegulatingPowers] = row\n    const [nuclear, chp, coal, wind, solar] = nonRegulatingPowers\n\n    const baseload = Math.min(demand, nuclear + chp + coal)\n\n    const regulating1 = demand - baseload\n    const regulating2 = calculateRegulatingPowerDemand(nonRegulatingPowers, demand, averageDemand)\n    const regulatingDemand = Math.min(regulating1, regulating2)\n\n    const [hydroAvailable, gasAvailable, oilAvailable] = REGULATING.map(\n      powerType => installed[powerType] * MAX_POWERS[powerType]\n    )\n    const hydro = Math.min(regulatingDemand, hydroAvailable)\n    const gas = Math.min(regulatingDemand - hydro, gasAvailable)\n    const oil = Math.min(regulatingDemand - hydro - gas, oilAvailable)\n\n    const regulating = hydro + oil + gas\n    const nonRegulating = nuclear + chp + coal + wind + solar\n\n    const renewables = Math.min(wind + solar, demand - baseload - regulatingDemand, averageDemand)\n    const production = nonRegulating + regulating\n    const deficit = Math.max(0, demand - production)\n\n    const powers = [nuclear, hydro, wind, solar, chp, gas, coal, oil]\n    const types = { baseload, renewables, regulating }\n\n    return { interval, demand, deficit, powers, types }\n  })\n}\n","import { round } from './utils'\nimport { CO2, FUEL, WASTE, KEYS } from './constants'\n\nexport const getExternalities = energy => {\n  const [co2, fuel, waste] = [CO2, FUEL, WASTE].map(table =>\n    energy.map((value, index) => table[KEYS[index]] * value).map(round)\n  )\n\n  const nuclear = round(WASTE.nuclear * energy[0])\n\n  return { co2, fuel, waste, nuclear }\n}\n","import { getAvailable } from './getAvailable'\nimport { getPowers } from './getPowers'\nimport { getEnergy } from './getEnergy'\nimport { getExternalities } from './getExternalities'\nimport { sum, round } from './utils'\nimport { KEYS } from './constants'\n\nexport function getData(data) {\n  const installed = KEYS.map(key => data[key])\n  const available = getAvailable(data)\n\n  const powers = getPowers(data)\n  const energy = getEnergy(powers)\n  const { co2, fuel, waste, nuclear } = getExternalities(energy)\n\n  const totalEnergy = energy.reduce(sum)\n  const totalInstalled = installed.reduce(sum)\n  const totalAvailable = available.reduce(sum)\n  const ratio = round(totalInstalled / totalAvailable)\n\n  const totalCO2 = co2.reduce(sum)\n  const totalWaste = waste.reduce(sum)\n  const totalFuel = fuel.reduce(sum)\n\n  return {\n    installed,\n    available,\n    powers,\n    energy,\n    co2,\n    fuel,\n    waste,\n    nuclear,\n    totalEnergy,\n    totalAvailable,\n    totalInstalled,\n    totalCO2,\n    totalFuel,\n    totalWaste,\n    ratio\n  }\n}\n","import { powerToEnergy, round, average, transpose } from './utils'\n\nexport function getEnergy(powerTable) {\n  return transpose(powerTable.map(({ powers }) => powers))\n    .map(average)\n    .map(powerToEnergy)\n    .map(round)\n}\n","import React, { Component } from 'react'\nimport * as store from '../../store'\nimport Slider from '../Slider/Slider'\nimport InfoBox from '../InfoBox/InfoBox'\nimport ComparisonTable from '../ComparisonTable/ComparisonTable'\nimport { getData } from '../../simulator'\nimport { INSTALLED_TODAY } from '../../simulator/constants'\nimport { formatNumber, sum } from '../../simulator/utils'\nimport './App.css'\n\nconst installed = store.load()\nconst defaultState = {\n  installed,\n  isDetails: false,\n  today: getData(INSTALLED_TODAY),\n  results: getData(installed)\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = defaultState\n    this.reset = this.reset.bind(this)\n    this.toggleDetails = this.toggleDetails.bind(this)\n  }\n\n  update(name, value) {\n    const installed = {\n      ...this.state.installed,\n      [name]: value\n    }\n\n    store.save(installed)\n    this.setState(currentState => ({ ...currentState, installed, results: getData(installed) }))\n  }\n\n  reset() {\n    const installed = store.reset()\n    this.setState(currentState => ({ ...currentState, installed, results: getData(installed) }))\n  }\n\n  toggleDetails() {\n    this.setState(currentState => ({ ...currentState, isDetails: !currentState.isDetails }))\n  }\n\n  render() {\n    const { installed, results, today } = this.state\n    const { nuclear, hydro, solar, wind, chp, gas, coal, oil, demand } = installed\n    const hasDeficit = demand - results.available > 0\n    console.log(results.energy, today.energy)\n    return (\n      <div className=\"App\">\n        <div className=\"row\">\n          <div className=\"column title\">\n            <h1>\n              Kalkulator\n              <br />\n              Miksu\n              <br />\n              <span className=\"colored\">Energetycznego</span>\n            </h1>\n          </div>\n          <div className=\"column lead\">\n            <p>\n              Tutaj masz możliwość decydowania o produkcji energii elektrycznej w Polsce. Wyzwanie\n              polega na posiadaniu wystarczającej mocy, gdy popyt jest najwyszy, przy jak\n              najmniejszych konsekwencjach środowiskowych. Ty budujesz - ty decydujesz!\n            </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"Results column\">\n            <div className=\"row\">\n              <div className=\"column\">\n                <InfoBox\n                  name=\"Moc zainstalowana\"\n                  value={formatNumber(3)(results.totalInstalled)}\n                  unit={'GW'}\n                />\n                <InfoBox\n                  name=\"Moc dostępna\"\n                  value={formatNumber(3)(results.totalAvailable)}\n                  unit={'GW'}\n                  type={hasDeficit ? 'warning' : ''}\n                />\n                <InfoBox name=\"Ratio\" value={formatNumber(0)(results.ratio)} />\n              </div>\n              <div className=\"column\">\n                <InfoBox\n                  name=\"Emisje CO2\"\n                  value={formatNumber(3)(results.totalCO2)}\n                  unit={'mln ton'}\n                />\n                <InfoBox\n                  name=\"Odpady jądrowe\"\n                  value={formatNumber(0)(results.nuclear)}\n                  unit={'tys. ton'}\n                />\n                <InfoBox\n                  name=\"Odpady stałe\"\n                  value={formatNumber(0)(results.totalWaste)}\n                  unit={'tys. ton'}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"Sliders column\">\n            <div className=\"row\">\n              <div className=\"column\">\n                <Slider\n                  name=\"Atom\"\n                  value={nuclear}\n                  update={value => this.update('nuclear', value)}\n                />\n                <Slider name=\"Hydro\" value={hydro} update={value => this.update('hydro', value)} />\n                <Slider name=\"Słońce\" value={solar} update={value => this.update('solar', value)} />\n                <Slider name=\"Wiatr\" value={wind} update={value => this.update('wind', value)} />\n              </div>\n              <div className=\"column\">\n                <Slider\n                  name=\"Kogeneracja\"\n                  value={chp}\n                  update={value => this.update('chp', value)}\n                />\n                <Slider name=\"Gaz\" value={gas} update={value => this.update('gas', value)} />\n                <Slider name=\"Węgiel\" value={coal} update={value => this.update('coal', value)} />\n                <Slider name=\"Ropa\" value={oil} update={value => this.update('oil', value)} />\n              </div>\n            </div>\n            <div className=\"Buttons\">\n              <button onClick={this.toggleDetails} className=\"DetailsToggle\">\n                {this.state.isDetails ? 'ukryj' : 'pokaż'}\n                {' dane szczegółowe'}\n              </button>\n              <button onClick={this.reset} className=\"ResetButton\">\n                Reset\n              </button>\n            </div>\n          </div>\n        </div>\n        {this.state.isDetails ? (\n          <div className=\"Details\">\n            <h3>{'Moc zainstalowana (GW)'}</h3>\n            <ComparisonTable\n              current={today.installed}\n              proposed={results.installed}\n              totalLabel={'Łącznie'}\n              totalFn={arr => arr.reduce(sum)}\n              format={formatNumber(3)}\n            />\n            <h3>{'Moc dostępna (GW)'}</h3>\n            <ComparisonTable\n              current={today.available}\n              proposed={results.available}\n              totalLabel={'Łącznie'}\n              totalFn={arr => arr.reduce(sum)}\n              format={formatNumber(3)}\n            />\n            <h3>{'Wyprodukowana energia (TWh / rok)'}</h3>\n            <ComparisonTable\n              current={today.energy}\n              proposed={results.energy}\n              totalLabel={'Łącznie'}\n              totalFn={arr => arr.reduce(sum)}\n              format={formatNumber(0)}\n            />\n            <h3>\n              {'Emisje CO'}\n              <sub>2</sub>\n              {' (mln ton / rok)'}\n            </h3>\n            <ComparisonTable\n              current={today.co2}\n              proposed={results.co2}\n              totalLabel={'Łącznie'}\n              totalFn={arr => arr.reduce(sum)}\n              format={formatNumber(3)}\n            />\n          </div>\n        ) : null}\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}