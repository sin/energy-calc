{"version":3,"sources":["simulator/constants.js","store.js","components/InfoIcon/InfoIcon.js","components/Slider/Slider.js","components/InfoBox/InfoBox.js","components/Table/Table.js","simulator/utils.js","components/ComparisonTable/ComparisonTable.js","components/CloseIcon/CloseIcon.js","texts/index.js","texts/AvailablePower.js","texts/InstalledPower.js","texts/Emissions.js","texts/NuclearWaste.js","texts/SolidWaste.js","texts/sources/index.js","texts/sources/CHP.js","texts/sources/Coal.js","texts/sources/Gas.js","texts/sources/Hydro.js","texts/sources/Nuclear.js","texts/sources/Oil.js","texts/sources/Solar.js","texts/sources/Wind.js","components/Modal/Modal.js","simulator/getAvailable.js","simulator/getPowers.js","simulator/getExternalities.js","simulator/index.js","simulator/getEnergy.js","components/ExternalitiesTable/ExternalitiesTable.js","components/App/App.js","serviceWorker.js","index.js"],"names":["LABELS","KEYS","INSTALLED_TODAY","nuclear","hydro","wind","solar","chp","gas","coal","oil","demand","MAX_POWERS","CAPACITY_FACTORS","CO2","WASTE","FUEL","POWER_COOF","ls","window","localStorage","STORE_KEY","load","data","getItem","JSON","parse","reset","setItem","stringify","InfoIcon","onClick","className","Slider","name","title","value","update","openModal","maxValue","minValue","step","onChange","InfoBox","unit","type","Table","children","powerToEnergy","power","sum","a","b","average","array","reduce","length","round","places","factor","Math","roundTo","transpose","Object","keys","map","column","row","formatNumber","commaPos","fractionDigits","minFractionDigits","Number","toFixed","toLocaleString","minimumFractionDigits","identity","Header","values","formatFn","totalLabel","index","key","Row","format","total","ComparisonTable","current","proposed","totalFn","diff","currentValue","totalCurrent","totalProposed","totalDiff","isHeader","available","installed","emissions","nuclearWaste","solidWaste","Modal","close","content","ContentComponent","ModalContent","event","target","currentTarget","stopPropagation","getAvailable","entries","filter","powerType","INTERVALS","start","Array","from","_","range","REGULATING","NON_REGULATING","IS_WEATHER_DEPENDANT","getPowers","powerTable","interval","powers","max","polystep","i","pow","getUtulizationFactor","averageDemand","demands","calculateAverageDemand","nonRegulatingPowers","baseload","min","regulating1","regulating2","production","calculateRegulatingPowerDemand","regulatingDemand","hydroAvailable","gasAvailable","oilAvailable","regulating","nonRegulating","renewables","deficit","types","getExternalities","energy","table","co2","fuel","waste","getData","totalEnergy","totalInstalled","totalAvailable","ratio","totalCO2","totalWaste","totalFuel","ExternalitiesTable","currentCO2kWh","proposedCO2kWh","label","store","defaultState","isModal","modalContent","isDetails","today","results","App","props","state","bind","toggleDetails","closeModal","this","setState","currentState","hasDeficit","arr","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qdAAaA,EAAS,CAAC,OAAQ,QAAS,QAAS,mBAAU,MAAO,MAAO,cAAU,QACtEC,EAAO,CAAC,UAAW,QAAS,OAAQ,QAAS,MAAO,MAAO,OAAQ,OAEnEC,EAAkB,CAC7BC,QAAS,EACTC,MAAO,IACPC,KAAM,KACNC,MAAO,KACPC,IAAK,KACLC,IAAK,KACLC,KAAM,MACNC,IAAK,EACLC,OAAQ,OAGGC,EAAa,CACxBT,QAAS,EACTC,MAAO,IACPC,KAAM,GACNC,MAAO,IACPC,IAAK,IACLC,IAAK,EACLC,KAAM,GACNC,IAAK,EACLC,OAAQ,GAcGE,EAAmB,CAC9BV,QAAS,GACTC,MAAO,IACPC,KAAM,IACNC,MAAO,EACPC,IAAK,IACLC,IAAK,GACLC,KAAM,GACNC,IAAK,IAIMI,EAAM,CACjBX,QAAS,EACTC,MAAO,EACPC,KAAM,GACNC,MAAO,GACPC,IAAK,GACLC,IAAK,IACLC,KAAM,IACNC,IAAK,KAGMK,EAAQ,CACnBZ,QAAS,KACTC,MAAO,EACPC,KAAM,EACNC,MAAO,EACPC,IAAK,GACLC,IAAK,EACLC,KAAM,GACNC,IAAK,GAGMM,EAAO,CAClBb,QAAS,KACTC,MAAO,EACPC,KAAM,EACNC,MAAO,EACPC,IAAK,IACLC,IAAK,IACLC,KAAM,IACNC,IAAK,KAGMO,EAAa,CACxBd,QAAS,CACP,qBACC,qBACD,oBACA,qBACC,qBACA,oBAEHE,KAAM,CACJ,qBACC,oBACD,qBACC,oBACD,oBACC,mBAEHC,MAAO,CACL,sBACC,oBACD,qBACC,oBACD,mBACC,kBAEHC,IAAK,CAAC,EAAG,GAAI,oBAAqB,oBAAqB,qBAAsB,mBAC7EE,KAAM,CACJ,qBACC,qBACD,oBACA,qBACC,qBACA,oBAEHE,OAAQ,CACN,qBACC,oBACD,qBACC,oBACD,qBACC,oBCzHCO,EAAKC,OAAOC,aACZC,EAAY,mBAMX,SAASC,IACd,IAAMC,EAAOL,EAAGM,QAAQH,GACxB,OAAIE,EAAaE,KAAKC,MAAMH,IAE5BI,IACOzB,GAGF,SAASyB,IAEd,OADAT,EAAGU,QAAQP,EAAWI,KAAKI,UAAU3B,IAC9BoB,I,mCCfM,SAASQ,EAAT,GAAgC,IAAZC,EAAW,EAAXA,QACjC,OACE,4BAAQC,UAAU,WAAWD,QAASA,GACpC,kBAAC,IAAD,O,YCAS,SAASE,EAAT,GAA4D,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,UAE3D,OACE,yBAAKN,UAAU,UACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACZG,EACAG,GAAa,kBAAC,EAAD,CAAUP,QAAS,kBAAMO,EAAUJ,OAEnD,yBAAKF,UAAU,iBACZI,EACD,0BAAMJ,UAAU,gBAAgB,SAGpC,kBAAC,IAAD,CAAYO,SAAU,KAAOC,SAAU,EAAGC,KAAM,IAAKL,MAAOA,EAAOM,SAbtD,SAAAN,GAAK,OAAIC,EAAOH,EAAME,O,MCJ1B,SAASO,EAAT,GAAsE,IAAnDT,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,MAAOQ,EAA8B,EAA9BA,KAA8B,IAAxBC,YAAwB,MAAjB,GAAiB,EAAbP,EAAa,EAAbA,UACrE,OACE,yBAAKN,UAAU,WACb,0BAAMA,UAAU,iBACbG,EACAG,GAAa,kBAAC,EAAD,CAAUP,QAAS,kBAAMO,EAAUJ,OAEnD,0BAAMF,UAAS,yBAAoBa,IAAST,GAC5C,0BAAMJ,UAAU,iBAAiBY,I,iBCTxB,SAASE,EAAT,GAAyC,IAAxBd,EAAuB,EAAvBA,UAAWe,EAAY,EAAZA,SACzC,OAAO,2BAAOf,UAAWA,EAAS,gBAAYA,GAAc,SAAUe,GCDjE,IAAMC,EAAgB,SAAAC,GAAK,OAAa,KAARA,EAAgB,KAK1CC,EAAM,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,GAKpBC,EAAU,SAAAC,GAAK,OAAIA,EAAMC,OAAOL,GAAOI,EAAME,QAmB7CC,EARU,eAACC,EAAD,uDAAU,EAAV,OAAgB,SAAAtB,GACrC,IAAMuB,EAAM,SAAG,GAAMD,GACrB,OAAOE,KAAKH,MAAMrB,EAAQuB,GAAUA,GAMjBE,CAAQ,GAKhBC,EAAY,SAAAR,GAAK,OAAIS,OAAOC,KAAKV,EAAM,IAAIW,KAAI,SAAAC,GAAM,OAAIZ,EAAMW,KAAI,SAAAE,GAAG,OAAIA,EAAID,UAK9EE,EAAe,wEAIxB,GAJwB,IAC1BC,gBAD0B,MACf,EADe,MAE1BC,sBAF0B,MAET,EAFS,MAG1BC,yBAH0B,MAGN,EAHM,SAIjB,SAAAnC,GAAK,OACdoC,QAAQpC,EAAK,SAAG,GAAMiC,IAAUI,QAAQH,IAAiBI,eAAe,GAAI,CAC1EC,sBAAuBJ,MAMdK,EAAW,SAAAxC,GAAK,OAAIA,G,MChDjC,SAASyC,EAAT,GAA8D,IAA5CC,EAA2C,EAA3CA,OAA2C,IAAnCC,gBAAmC,MAAxBH,EAAwB,EAAdI,EAAc,EAAdA,WAC7C,OACE,4BACE,4BAAK,QACJF,EAAOb,IAAIc,GAAUd,KAAI,SAAC7B,EAAO6C,GAAR,OACxB,wBAAIC,IAAKD,GAAQ7C,MAElB4C,EAAa,4BAAKA,GAAmB,MAK5C,SAASG,EAAT,GAAuE,IAAD,IAAvDhD,aAAuD,MAA/C,GAA+C,EAA3C2C,EAA2C,EAA3CA,OAA2C,IAAnCM,cAAmC,MAA1BR,EAA0B,MAAhBS,aAAgB,MAAR,KAAQ,EACpE,OACE,4BACE,4BAAKlD,GACJ2C,EAAOb,IAAImB,GAAQnB,KAAI,SAAC7B,EAAO6C,GAAR,OACtB,wBAAIC,IAAKD,GAAQ7C,MAER,OAAViD,EAAiB,4BAAKD,EAAOC,IAAe,MAKpC,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,QACAC,EAIC,EAJDA,SAIC,IAHDR,kBAGC,MAHY,GAGZ,EAFDS,EAEC,EAFDA,QAEC,IADDL,cACC,MADQ3B,EACR,EACKiC,EAAOH,EAAQtB,KAAI,SAAC0B,EAAcV,GAAf,OAAyBO,EAASP,GAASU,KADnE,EAEgDF,EAC7C,CAACA,EAAQF,GAAUE,EAAQD,GAAWC,EAAQC,IAC9C,GAJH,mBAEME,EAFN,KAEoBC,EAFpB,KAEmCC,EAFnC,KAMD,OACE,kBAAC,EAAD,CAAO9D,UAAU,mBACf,+BACE,kBAAC6C,EAAD,CAAQC,OAAQ9E,EAAQ+F,UAAU,EAAMf,WAAYA,KAEtD,+BACE,kBAACG,EAAD,CAAKL,OAAQS,EAASpD,MAAM,YAAYiD,OAAQA,EAAQC,MAAOO,IAC/D,kBAACT,EAAD,CAAKL,OAAQU,EAAUrD,MAAM,mBAAmBiD,OAAQA,EAAQC,MAAOQ,IACvE,kBAACV,EAAD,CAAKL,OAAQY,EAAMvD,MAAM,kBAAUiD,OAAQA,EAAQC,MAAOS,M,kBC9CnD,SAAShE,EAAT,GAAgC,IAAZC,EAAW,EAAXA,QACjC,OACE,4BAAQC,UAAU,YAAYD,QAASA,GACrC,kBAAC,IAAD,O,8NCES,M,yVAAA,EACbiE,UCRa,WACb,OACE,kBAAC,WAAD,KACE,iDACA,oCDKJC,UETa,WACb,OACE,kBAAC,WAAD,KACE,iDACA,oCFMJC,UGVa,WACb,OACE,kBAAC,WAAD,KACE,wCACW,mCAEX,oCHKJC,aIXa,WACb,OACE,kBAAC,WAAD,KACE,mDACA,oCJQJC,WKZa,WACb,OACE,kBAAC,WAAD,KACE,iDACA,qCCGS,CACb7F,ICRa,WACb,OACE,kBAAC,WAAD,KACE,2CACA,oCDKJE,KETa,WACb,OACE,kBAAC,WAAD,KACE,wDACA,oCFMJD,IGVa,WACb,OACE,kBAAC,WAAD,KACE,kDACA,oCHOJJ,MIXa,WACb,OACE,kBAAC,WAAD,KACE,+CACA,oCJQJD,QKZa,WACb,OACE,kBAAC,WAAD,KACE,sDACA,oCLSJO,IMba,WACb,OACE,kBAAC,WAAD,KACE,mDACA,oCNUJJ,MOda,WACb,OACE,kBAAC,WAAD,KACE,4CACA,oCPWJD,KQfa,WACb,OACE,kBAAC,WAAD,KACE,kDACA,sC,MCDS,SAASgG,EAAT,GAAoC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAC/BC,EAAmBC,EAAaF,GAMtC,OACE,yBAAKvE,UAAU,QAAQD,QANT,SAAA2E,GACVA,EAAMC,SAAWD,EAAME,eAAeN,IAC1CI,EAAMG,oBAKJ,yBAAK7E,UAAU,gBACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,kBACb,kBAACwE,EAAD,QAGJ,yBAAKxE,UAAU,gBACb,kBAAC,EAAD,CAAWD,QAASuE,OClBvB,IAAMQ,EAAe,SAAAb,GAC1B,OAAOlC,OAAOgD,QAAQd,GACnBe,QAAO,kBAA+B,WAA/B,uBACP/C,KAAI,mCAAEgD,EAAF,iBAAwCpG,EAAiBoG,MAC7DhD,IAAIR,I,gBCJHyD,EpBee,SAAC1D,GAAD,IAASf,EAAT,uDAAgB,EAAG0E,EAAnB,uDAA2B,EAA3B,OACnBC,MAAMC,KAAK,CAAE7D,WAAU,SAAC8D,EAAGrC,GAAJ,OAAckC,EAAQlC,EAAQxC,KoBhBrC8E,CAAM,GAAI,GACtBC,GAAa,CAAC,QAAS,MAAO,OAC9BC,GAAiB,CAAC,SAAU,UAAW,MAAO,OAAQ,OAAQ,SAC9DC,GAAuB,EAAC,GAAO,GAAO,GAAO,GAAM,GAgC5CC,GAAY,SAAA1B,GACvB,IAAM2B,EAAaV,EAAUjD,KAAI,SAAA4D,GAC/B,IAAMC,EAASL,GAAexD,KAAI,SAAAgD,GAChC,IAAMc,EAAM9B,EAAUgB,GAAarG,EAAWqG,GACxChE,EAAQW,KAAKH,MAAMsE,EAXF,SAACF,EAAUZ,GAAX,OAC3B,EAAIhG,EAAWgG,GAAWhD,KAAI,SAAC+D,EAAUC,GAAX,OAAiBD,EAAWpE,KAAKsE,IAAIL,EAAU,EAAII,MAAI1E,OAAOL,GAUzDiF,CAAqBN,EAAUZ,IAE9D,OAAOrD,KAAKmE,IAAI,EAAG9E,MAGrB,MAAM,CAAE4E,GAAR,mBAAqBC,OAGjBM,EA1CuB,SAAAR,GAC7B,IAAMS,EAAUT,EAAW3D,KAAI,0CAC/B,OAAOL,KAAKH,MAAM4E,EAAQ9E,OAAOL,IAAQmF,EAAQ7E,OAAS,IAwCpC8E,CAAuBV,GAE7C,OAAOA,EAAW3D,KAAI,SAAAE,GAAQ,IAAD,cACwBA,GAA5C0D,EADoB,KACVlH,EADU,KACC4H,EADD,yBAEeA,EAFf,GAEpBpI,EAFoB,KAEXI,EAFW,KAENE,EAFM,KAEAJ,EAFA,KAEMC,EAFN,KAIrBkI,EAAW5E,KAAK6E,IAAI9H,EAAQR,EAAUI,EAAME,GAE5CiI,EAAc/H,EAAS6H,EACvBG,EA9C6B,SAACb,EAAQnH,EAAQyH,GAEtD,IAAMQ,EAAad,EAChB7D,KAAI,SAAC7B,EAAO8C,GAAR,OAAiBwC,GAAqBxC,GAAOtB,KAAK6E,IAAIrG,EAAOgG,GAAiBhG,KAClFmB,OAAOL,GAEV,OAAOU,KAAKmE,IAAI,EAAGpH,EAASiI,GAwCNC,CAA+BN,EAAqB5H,EAAQyH,GAC1EU,EAAmBlF,KAAK6E,IAAIC,EAAaC,GARpB,EAU0BnB,GAAWvD,KAC9D,SAAAgD,GAAS,OAAIhB,EAAUgB,GAAarG,EAAWqG,MAXtB,mBAUpB8B,EAVoB,KAUJC,EAVI,KAUUC,EAVV,KAarB7I,EAAQwD,KAAK6E,IAAIK,EAAkBC,GACnCvI,EAAMoD,KAAK6E,IAAIK,EAAmB1I,EAAO4I,GACzCtI,EAAMkD,KAAK6E,IAAIK,EAAmB1I,EAAQI,EAAKyI,GAE/CC,EAAa9I,EAAQM,EAAMF,EAC3B2I,EAAgBhJ,EAAUI,EAAME,EAAOJ,EAAOC,EAE9C8I,EAAaxF,KAAK6E,IAAIpI,EAAOC,EAAOK,EAAS6H,EAAWM,EAAkBV,GAC1EQ,EAAaO,EAAgBD,EAMnC,MAAO,CAAErB,WAAUlH,SAAQ0I,QALXzF,KAAKmE,IAAI,EAAGpH,EAASiI,GAKDd,OAHrB,CAAC3H,EAASC,EAAOC,EAAMC,EAAOC,EAAKC,EAAKC,EAAMC,GAGjB4I,MAF9B,CAAEd,WAAUY,aAAYF,mBC1EnC,IAAMK,GAAmB,SAAAC,GAAW,IAAD,EACb,CAAC1I,EAAKE,EAAMD,GAAOkD,KAAI,SAAAwF,GAAK,OACrDD,EAAOvF,KAAI,SAAC7B,EAAO6C,GAAR,OAAkBwE,EAAMxJ,EAAKgF,IAAU7C,KAAO6B,IAAIR,MAFvB,mBAOxC,MAAO,CAAEiG,IAP+B,KAO1BC,KAP0B,KAOpBC,MAPoB,KAObzJ,QAFXsD,EAAM1C,EAAMZ,QAAUqJ,EAAO,MCDxC,SAASK,GAAQtI,GACtB,IAAM0E,EAAYhG,EAAKgE,KAAI,SAAAiB,GAAG,OAAI3D,EAAK2D,MACjCc,EAAYc,EAAavF,GAEzBuG,EAASH,GAAUpG,GACnBiI,ECTC1F,EDSkBgE,ECTG7D,KAAI,qBAAG6D,WAChC7D,IAAIZ,GACJY,IAAIjB,GACJiB,IAAIR,GDCqB,EAMU8F,GAAiBC,GAA/CE,EANoB,EAMpBA,IAAKC,EANe,EAMfA,KAAMC,EANS,EAMTA,MAAOzJ,EANE,EAMFA,QAEpB2J,EAAcN,EAAOjG,OAAOL,GAC5B6G,EAAiB9D,EAAU1C,OAAOL,GAClC8G,EAAiBhE,EAAUzC,OAAOL,GAClC+G,EAAQxG,EAAMsG,EAAiBC,GAE/BE,EAAWR,EAAInG,OAAOL,GACtBiH,EAAaP,EAAMrG,OAAOL,GAC1BkH,EAAYT,EAAKpG,OAAOL,GAE9B,MAAO,CACL+C,YACAD,YACA8B,SACA0B,SACAE,MACAC,OACAC,QACAzJ,UACA2J,cACAE,iBACAD,iBACAG,WACAE,YACAD,aACAF,S,YElCW,SAASI,GAAT,GAAoD,IAAtB9E,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAC9C8E,EAAgB/E,EAAQ2E,SAAW3E,EAAQuE,YAC3CS,EAAiB/E,EAAS0E,SAAW1E,EAASsE,YAE9CvI,EAAO,CACX,CACEiJ,MAAO,+DACP1F,OAAQ,CAAC,IAAK,IAAK,MAErB,CACE0F,MAAO,4EACP1F,OAAQ,CAAC,IAAK,IAAK,MAErB,CACE0F,MAAO,uEACP1F,OAAQ,CAAC,IAAK,IAAK,MAErB,CACE0F,MAAO,kEACP1F,OAAQ,CAACS,EAAQ2E,SAAU1E,EAAS0E,SAAU1E,EAAS0E,SAAW3E,EAAQ2E,UAAUjG,IAClFG,EAAa,CAAEC,SAAU,EAAGC,eAAgB,MAGhD,CACEkG,MAAO,uCACP1F,OAAQ,CAACwF,EAAeC,EAAgBA,EAAiBD,GAAerG,IACtEG,EAAa,CAAEE,eAAgB,MAGnC,CACEkG,MAAO,yEACP1F,OAAQ,CAACS,EAAQpF,QAASqF,EAASrF,QAASqF,EAASrF,QAAUoF,EAAQpF,SAAS8D,IAC9EG,EAAa,CAAEE,eAAgB,OAKrC,OACE,kBAAC,EAAD,CAAOtC,UAAU,sBACf,+BACE,4BACE,4BAAK,IACL,4BAAK,aACL,4BAAK,eACL,4BAAK,qBAGT,+BACGT,EAAK0C,KAAI,WAAoBgB,GAApB,IAAGuF,EAAH,EAAGA,MAAO1F,EAAV,EAAUA,OAAV,OACR,wBAAII,IAAKD,GACP,4BAAKuF,GACJ1F,EAAOb,KAAI,SAAC7B,EAAO6C,GAAR,OACV,wBAAIC,IAAKD,GAAQ7C,Y,6jBC7C/B,IAAM6D,GAAYwE,IACZC,GAAe,CACnBzE,aACA0E,SAAS,EACTC,aAAc,KACdC,WAAW,EACXC,MAAOjB,GAAQ3J,GACf6K,QAASlB,GAAQ5D,KAyOJ+E,G,YArOb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQR,GACb,EAAK/I,MAAQ,EAAKA,MAAMwJ,KAAX,gBACb,EAAK9I,OAAS,EAAKA,OAAO8I,KAAZ,gBACd,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAK7I,UAAY,EAAKA,UAAU6I,KAAf,gBACjB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBARD,E,oEAWZjJ,EAAME,GACX,I9B9BiBb,E8B8BX0E,EAAS,MACVqF,KAAKJ,MAAMjF,UADD,eAEZ/D,EAAOE,I9BhCOb,E8BmCN0E,E9BlCb/E,EAAGU,QAAQP,EAAWI,KAAKI,UAAUN,I8BmCnC+J,KAAKC,UAAS,SAAAC,GAAY,aAAUA,EAAV,CAAwBvF,YAAW8E,QAASlB,GAAQ5D,U,8BAI9E,IAAMA,EAAYwE,IAClBa,KAAKC,UAAS,SAAAC,GAAY,aAAUA,EAAV,CAAwBvF,YAAW8E,QAASlB,GAAQ5D,U,sCAI9EqF,KAAKC,UAAS,SAAAC,GAAY,aAAUA,EAAV,CAAwBX,WAAYW,EAAaX,iB,gCAGnE3I,GACRoJ,KAAKC,UAAS,SAAAC,GAAY,aAAUA,EAAV,CAAwBb,SAAS,EAAMC,aAAc1I,S,mCAI/EoJ,KAAKC,UAAS,SAAAC,GAAY,aAAUA,EAAV,CAAwBb,SAAS,EAAOC,aAAc,Y,+BAGxE,IACAM,EAA6BI,KAA7BJ,MAAO7I,EAAsBiJ,KAAtBjJ,OAAQC,EAAcgJ,KAAdhJ,UACf2D,EAAgEiF,EAAhEjF,UAAW8E,EAAqDG,EAArDH,QAASD,EAA4CI,EAA5CJ,MAAOD,EAAqCK,EAArCL,UAAWF,EAA0BO,EAA1BP,QAASC,EAAiBM,EAAjBN,aAC/CzK,EAA6D8F,EAA7D9F,QAASC,EAAoD6F,EAApD7F,MAAOE,EAA6C2F,EAA7C3F,MAAOD,EAAsC4F,EAAtC5F,KAAME,EAAgC0F,EAAhC1F,IAAKC,EAA2ByF,EAA3BzF,IAAKC,EAAsBwF,EAAtBxF,KAAMC,EAAgBuF,EAAhBvF,IAE/C+K,EAF+DxF,EAAXtF,OAE9BoK,EAAQf,eAAiB,EAErD,OACE,yBAAKhI,UAAU,OACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,gBACb,yCAEE,6BAFF,QAIE,6BACA,0BAAMA,UAAU,WAAhB,oBAGJ,yBAAKA,UAAU,eACb,oSAOJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,kBAAC,EAAD,CACEE,KAAK,YACLC,MAAM,oBACNC,MAAOgC,EAAa,CAAEC,SAAU,EAAGC,eAAgB,EAAGC,kBAAmB,GAAlEH,CACL2G,EAAQhB,gBAEVnH,KAAM,KACNN,UAAWA,IAEb,kBAAC,EAAD,CACEJ,KAAK,YACLC,MAAM,oBACNC,MAAOgC,EAAa,CAAEC,SAAU,EAAGC,eAAgB,EAAGC,kBAAmB,GAAlEH,CACL2G,EAAQf,gBAEVpH,KAAM,KACNC,KAAM4I,EAAa,UAAY,GAC/BnJ,UAAWA,IAEb,kBAAC,EAAD,CACEJ,KAAK,QACLC,MAAM,QACNC,MAAOgC,EAAa,CAAEE,eAAgB,GAA/BF,CAAoC2G,EAAQd,UAGvD,yBAAKjI,UAAU,UACb,kBAAC,EAAD,CACEE,KAAK,YACLC,MAAM,kBACNC,MAAOgC,IAAe2G,EAAQb,UAC9BtH,KAAM,KACNN,UAAWA,IAEb,kBAAC,EAAD,CACEJ,KAAK,eACLC,MAAM,sBACNC,MAAOgC,EAAa,CAAEE,eAAgB,GAA/BF,CAAoC2G,EAAQ5K,SACnDyC,KAAM,KACNN,UAAWA,IAEb,kBAAC,EAAD,CACEJ,KAAK,aACLC,MAAM,oBACNC,MAAOgC,IAAe2G,EAAQZ,YAC9BvH,KAAM,KACNN,UAAWA,OAKnB,yBAAKN,UAAU,kBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,kBAAC,EAAD,CACEE,KAAK,UACLC,MAAM,OACNC,MAAOjC,EACPkC,OAAQA,EACRC,UAAWA,IAEb,kBAAC,EAAD,CACEJ,KAAK,QACLC,MAAM,QACNC,MAAOhC,EACPiC,OAAQA,EACRC,UAAWA,IAEb,kBAAC,EAAD,CACEJ,KAAK,QACLC,MAAM,mBACNC,MAAO9B,EACP+B,OAAQA,EACRC,UAAWA,IAEb,kBAAC,EAAD,CACEJ,KAAK,OACLC,MAAM,QACNC,MAAO/B,EACPgC,OAAQA,EACRC,UAAWA,KAGf,yBAAKN,UAAU,UACb,kBAAC,EAAD,CACEE,KAAK,MACLC,MAAM,cACNC,MAAO7B,EACP8B,OAAQA,EACRC,UAAWA,IAEb,kBAAC,EAAD,CAAQJ,KAAK,MAAMC,MAAM,MAAMC,MAAO5B,EAAK6B,OAAQA,EAAQC,UAAWA,IACtE,kBAAC,EAAD,CACEJ,KAAK,OACLC,MAAM,cACNC,MAAO3B,EACP4B,OAAQA,EACRC,UAAWA,IAEb,kBAAC,EAAD,CAAQJ,KAAK,MAAMC,MAAM,OAAOC,MAAO1B,EAAK2B,OAAQA,EAAQC,UAAWA,MAG3E,yBAAKN,UAAU,WACb,4BAAQD,QAASuJ,KAAKF,cAAepJ,UAAU,iBAC5C6I,EAAY,QAAU,aACtB,6BAEH,4BAAQ9I,QAASuJ,KAAK3J,MAAOK,UAAU,eAAvC,YAML6I,EACC,yBAAK7I,UAAU,WACb,4BACG,YACD,kCACC,eAEH,kBAAC,EAAD,CACEuD,QAASuF,EAAMpB,IACflE,SAAUuF,EAAQrB,IAClB1E,WAAY,oBACZS,QAAS,SAAAiG,GAAG,OAAIA,EAAInI,OAAOL,IAC3BkC,OAAQhB,MAEV,4BAAK,qCACL,kBAAC,EAAD,CACEmB,QAASuF,EAAMtB,OACfhE,SAAUuF,EAAQvB,OAClBxE,WAAY,oBACZS,QAAS,SAAAiG,GAAG,OAAIA,EAAInI,OAAOL,IAC3BkC,OAAQhB,EAAa,CAAEE,eAAgB,MAEzC,4BAAK,0BACL,kBAAC,EAAD,CACEiB,QAASuF,EAAM7E,UACfT,SAAUuF,EAAQ9E,UAClBjB,WAAY,oBACZS,QAAS,SAAAiG,GAAG,OAAIA,EAAInI,OAAOL,IAC3BkC,OAAQhB,EAAa,CAAEC,SAAU,EAAGC,eAAgB,MAEtD,4BAAK,0BACL,kBAAC,EAAD,CACEiB,QAASuF,EAAM9E,UACfR,SAAUuF,EAAQ/E,UAClBhB,WAAY,oBACZS,QAAS,SAAAiG,GAAG,OAAIA,EAAInI,OAAOL,IAC3BkC,OAAQhB,EAAa,CAAEC,SAAU,EAAGC,eAAgB,MAEtD,4BAAK,iCACL,kBAAC,GAAD,CAAoBiB,QAASuF,EAAOtF,SAAUuF,KAE9C,KACHJ,GAAW,kBAAC,EAAD,CAAOpE,QAASqE,EAActE,MAAOgF,KAAKD,kB,GAhO5CM,aCVEC,QACW,cAA7BzK,OAAO0K,SAASC,UAEe,UAA7B3K,OAAO0K,SAASC,UAEhB3K,OAAO0K,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1217b5d0.chunk.js","sourcesContent":["export const LABELS = ['Atom', 'Hydro', 'Wiatr', 'Słońce', 'CHP', 'Gaz', 'Węgiel', 'Ropa']\nexport const KEYS = ['nuclear', 'hydro', 'wind', 'solar', 'chp', 'gas', 'coal', 'oil']\n\nexport const INSTALLED_TODAY = {\n  nuclear: 0,\n  hydro: 893,\n  wind: 1374,\n  solar: 4947,\n  chp: 2751,\n  gas: 1956,\n  coal: 30276,\n  oil: 0,\n  demand: 27600\n}\n\nexport const MAX_POWERS = {\n  nuclear: 1,\n  hydro: 0.42,\n  wind: 0.7,\n  solar: 0.65,\n  chp: 0.75,\n  gas: 1,\n  coal: 0.6,\n  oil: 1,\n  demand: 1\n}\n\nexport const MAX_CAPACITY = {\n  nuclear: 7884,\n  hydro: 3700,\n  wind: 2630,\n  solar: 1000,\n  chp: 3050,\n  gas: 7884,\n  coal: 7884,\n  oil: 7884\n}\n\nexport const CAPACITY_FACTORS = {\n  nuclear: 0.9,\n  hydro: 0.82,\n  wind: 0.09,\n  solar: 0,\n  chp: 0.77,\n  gas: 0.9,\n  coal: 0.7,\n  oil: 0.9\n}\n\n// grams / kWh\nexport const CO2 = {\n  nuclear: 5,\n  hydro: 9,\n  wind: 15,\n  solar: 46,\n  chp: 15,\n  gas: 515,\n  coal: 881,\n  oil: 993\n}\n\nexport const WASTE = {\n  nuclear: 0.005,\n  hydro: 0,\n  wind: 0,\n  solar: 0,\n  chp: 15,\n  gas: 0,\n  coal: 37,\n  oil: 0\n}\n\nexport const FUEL = {\n  nuclear: 0.005,\n  hydro: 0,\n  wind: 0,\n  solar: 0,\n  chp: 1000,\n  gas: 187,\n  coal: 379,\n  oil: 331\n}\n\nexport const POWER_COOF = {\n  nuclear: [\n    2.60027483362602e-12,\n    -4.21522717629026e-10,\n    8.43915935489853e-9,\n    8.25183318068457e-7,\n    -1.04055498388049e-5,\n    -0.00395592006246061\n  ],\n  wind: [\n    2.32518114747708e-11,\n    -8.24592229234651e-9,\n    1.13347571282831e-6,\n    -7.65761024246728e-5,\n    0.00267572948815116,\n    -0.0521660174799689\n  ],\n  solar: [\n    3.49355320699972e-10,\n    -8.72092274335658e-8,\n    8.13600796546478e-6,\n    -0.000372701904416939,\n    0.0091188719947563,\n    -0.123030025850834\n  ],\n  chp: [0, 0, -8.66564795646319e-9, 1.28246828222672e-6, 1.86719686851292e-5, -0.0139171520689115],\n  coal: [\n    2.60027483362602e-12,\n    -4.21522717629026e-10,\n    8.43915935489853e-9,\n    8.25183318068457e-7,\n    -1.04055498388049e-5,\n    -0.00395592006246061\n  ],\n  demand: [\n    5.22305012772976e-12,\n    -1.99919545823719e-9,\n    2.84634493734413e-7,\n    -1.96831546062457e-5,\n    0.000718706830438671,\n    -0.0176184293258551\n  ]\n}\n","import { INSTALLED_TODAY } from './simulator/constants'\n\nconst ls = window.localStorage\nconst STORE_KEY = 'energy-calc-data'\n\nexport function save(data) {\n  ls.setItem(STORE_KEY, JSON.stringify(data))\n}\n\nexport function load() {\n  const data = ls.getItem(STORE_KEY)\n  if (data) return JSON.parse(data)\n\n  reset()\n  return INSTALLED_TODAY\n}\n\nexport function reset() {\n  ls.setItem(STORE_KEY, JSON.stringify(INSTALLED_TODAY))\n  return load()\n}","import React from 'react'\nimport { FaInfoCircle } from 'react-icons/fa'\nimport './InfoIcon.css'\n\nexport default function InfoIcon({ onClick }) {\n  return (\n    <button className=\"InfoIcon\" onClick={onClick}>\n      <FaInfoCircle />\n    </button>\n  )\n}\n","import React from 'react'\nimport InputRange from 'react-input-range'\nimport InfoIcon from '../InfoIcon/InfoIcon'\n\nimport 'react-input-range/lib/css/index.css'\nimport './Slider.css'\n\nexport default function Slider({ name, title, value, update, openModal }) {\n  const onChange = value => update(name, value)\n  return (\n    <div className=\"Slider\">\n      <div className=\"Slider__label\">\n        <div className=\"Slider__name\">\n          {title}\n          {openModal && <InfoIcon onClick={() => openModal(name)} />}\n        </div>\n        <div className=\"Slider__value\">\n          {value}\n          <span className=\"Slider__unit\">{' MW'}</span>\n        </div>\n      </div>\n      <InputRange maxValue={35000} minValue={0} step={500} value={value} onChange={onChange} />\n    </div>\n  )\n}\n","import React from 'react'\nimport InfoIcon from '../InfoIcon/InfoIcon'\nimport './InfoBox.css'\n\nexport default function InfoBox({ name, title, value, unit, type = '', openModal }) {\n  return (\n    <div className=\"InfoBox\">\n      <span className=\"InfoBox__name\">\n        {title}\n        {openModal && <InfoIcon onClick={() => openModal(name)} />}\n      </span>\n      <span className={`InfoBox__value ${type}`}>{value}</span>\n      <span className=\"InfoBox__unit\">{unit}</span>\n    </div>\n  )\n}\n","import React from 'react'\nimport './Table.css'\n\nexport default function Table({ className, children }) {\n  return <table className={className ? `Table ${className}` : 'Table'}>{children}</table>\n}\n","/**\n * converts MW to TWh per year\n */\nexport const powerToEnergy = power => (power * 8760) / 1e6\n\n/**\n * sums two values\n */\nexport const sum = (a, b) => a + b\n\n/**\n * calculates average of values in array\n */\nexport const average = array => array.reduce(sum) / array.length\n\n/**\n * creates numbers range\n */\nexport const range = (length, step = 1, start = 0) =>\n  Array.from({ length }, (_, index) => start + index * step)\n\n/**\n * round to x decimal places\n */\nexport const roundTo = (places = 0) => value => {\n  const factor = 10 ** places\n  return Math.round(value * factor) / factor\n}\n\n/**\n * round to 1 decimal place\n */\nexport const round = roundTo(1)\n\n/**\n * transpose array\n */\nexport const transpose = array => Object.keys(array[0]).map(column => array.map(row => row[column]))\n\n/**\n * formatting\n */\nexport const formatNumber = ({\n  commaPos = 0,\n  fractionDigits = 0,\n  minFractionDigits = 0\n} = {}) => value =>\n  Number((value / 10 ** commaPos).toFixed(fractionDigits)).toLocaleString([], {\n    minimumFractionDigits: minFractionDigits\n  })\n\n/**\n *\n */\nexport const identity = value => value\n\nexport const isNumber = value => typeof value === 'number'\n","import React from 'react'\nimport Table from '../Table/Table'\nimport { LABELS } from '../../simulator/constants'\nimport { round, identity } from '../../simulator/utils'\nimport './ComparisonTable.css'\n\nfunction Header({ values, formatFn = identity, totalLabel }) {\n  return (\n    <tr>\n      <th>{'\\u00A0'}</th>\n      {values.map(formatFn).map((value, index) => (\n        <th key={index}>{value}</th>\n      ))}\n      {totalLabel ? <th>{totalLabel}</th> : null}\n    </tr>\n  )\n}\n\nfunction Row({ title = '', values, format = identity, total = null }) {\n  return (\n    <tr>\n      <td>{title}</td>\n      {values.map(format).map((value, index) => (\n        <td key={index}>{value}</td>\n      ))}\n      {total !== null ? <td>{format(total)}</td> : null}\n    </tr>\n  )\n}\n\nexport default function ComparisonTable({\n  current,\n  proposed,\n  totalLabel = '',\n  totalFn,\n  format = round\n}) {\n  const diff = current.map((currentValue, index) => proposed[index] - currentValue)\n  const [totalCurrent, totalProposed, totalDiff] = totalFn\n    ? [totalFn(current), totalFn(proposed), totalFn(diff)]\n    : []\n\n  return (\n    <Table className=\"ComparisonTable\">\n      <thead>\n        <Header values={LABELS} isHeader={true} totalLabel={totalLabel}></Header>\n      </thead>\n      <tbody>\n        <Row values={current} title=\"Aktualnie\" format={format} total={totalCurrent}></Row>\n        <Row values={proposed} title=\"Twoja propozycja\" format={format} total={totalProposed}></Row>\n        <Row values={diff} title=\"Różnica\" format={format} total={totalDiff}></Row>\n      </tbody>\n    </Table>\n  )\n}\n","import React from 'react'\nimport { MdClose } from 'react-icons/md'\nimport './CloseIcon.css'\n\nexport default function InfoIcon({ onClick }) {\n  return (\n    <button className=\"CloseIcon\" onClick={onClick}>\n      <MdClose />\n    </button>\n  )\n}\n","import sources from './sources'\n\nimport AvailablePower from './AvailablePower'\nimport InstalledPower from './InstalledPower'\n\nimport Emissions from './Emissions'\nimport NuclearWaste from './NuclearWaste'\nimport SolidWaste from './SolidWaste'\n\nexport default {\n  available: AvailablePower,\n  installed: InstalledPower,\n  emissions: Emissions,\n  nuclearWaste: NuclearWaste,\n  solidWaste: SolidWaste,\n  ...sources\n}\n","import React, { Fragment } from 'react'\n\nexport default function AvailablePower() {\n  return (\n    <Fragment>\n      <h3>Moc dostępna</h3>\n      <p>WIP</p>\n    </Fragment>\n  )\n}\n","import React, { Fragment } from 'react'\n\nexport default function InstalledPower() {\n  return (\n    <Fragment>\n      <h3>Moc zainstalowana</h3>\n      <p>WIP</p>\n    </Fragment>\n  )\n}\n","import React, { Fragment } from 'react'\n\nexport default function Emissions() {\n  return (\n    <Fragment>\n      <h3>\n        Emisje CO<sub>2</sub>\n      </h3>\n      <p>WIP</p>\n    </Fragment>\n  )\n}\n","import React, { Fragment } from 'react'\n\nexport default function NuclearWaste() {\n  return (\n    <Fragment>\n      <h3>Odpady jądrowe</h3>\n      <p>WIP</p>\n    </Fragment>\n  )\n}\n","import React, { Fragment } from 'react'\n\nexport default function SolidWaste() {\n  return (\n    <Fragment>\n      <h3>Odpady stałe</h3>\n      <p>WIP</p>\n    </Fragment>\n  )\n}\n","import CHP from './CHP'\nimport Coal from './Coal'\nimport Gas from './Gas'\nimport Hydro from './Hydro'\nimport Nuclear from './Nuclear'\nimport Oil from './Oil'\nimport Solar from './Solar'\nimport Wind from './Wind'\n\nexport default {\n  chp: CHP,\n  coal: Coal,\n  gas: Gas,\n  hydro: Hydro,\n  nuclear: Nuclear,\n  oil: Oil,\n  solar: Solar,\n  wind: Wind\n}\n","import React, { Fragment } from 'react'\n\nexport default function CHP() {\n  return (\n    <Fragment>\n      <h3>Kogeneracja</h3>\n      <p>WIP</p>\n    </Fragment>\n  )\n}\n","import React, { Fragment } from 'react'\n\nexport default function Coal() {\n  return (\n    <Fragment>\n      <h3>Elektrownie węglowe</h3>\n      <p>WIP</p>\n    </Fragment>\n  )\n}\n","import React, { Fragment } from 'react'\n\nexport default function Gas() {\n  return (\n    <Fragment>\n      <h3>Elektrownie gazowe</h3>\n      <p>WIP</p>\n    </Fragment>\n  )\n}\n","import React, { Fragment } from 'react'\n\nexport default function Hydro() {\n  return (\n    <Fragment>\n      <h3>Hydroenergetyka</h3>\n      <p>WIP</p>\n    </Fragment>\n  )\n}\n","import React, { Fragment } from 'react'\n\nexport default function Nuclear() {\n  return (\n    <Fragment>\n      <h3>Energtyka jądrowa</h3>\n      <p>WIP</p>\n    </Fragment>\n  )\n}\n","import React, { Fragment } from 'react'\n\nexport default function Oil() {\n  return (\n    <Fragment>\n      <h3>Elektrownie olejowe</h3>\n      <p>WIP</p>\n    </Fragment>\n  )\n}\n","import React, { Fragment } from 'react'\n\nexport default function Solar() {\n  return (\n    <Fragment>\n      <h3>Fotowoltaika</h3>\n      <p>WIP</p>\n    </Fragment>\n  )\n}\n","import React, { Fragment } from 'react'\n\nexport default function Wind() {\n  return (\n    <Fragment>\n      <h3>Energtyka wiatrowa</h3>\n      <p>WIP</p>\n    </Fragment>\n  )\n}\n","import React from 'react'\nimport CloseIcon from '../CloseIcon/CloseIcon'\nimport ModalContent from '../../texts/'\nimport './Modal.css'\n\nexport default function Modal({ close, content }) {\n  const ContentComponent = ModalContent[content]\n  const onClick = event => {\n    if (event.target === event.currentTarget) close()\n    event.stopPropagation()\n  }\n\n  return (\n    <div className=\"Modal\" onClick={onClick}>\n      <div className=\"Modal__modal\">\n        <div className=\"Modal__scrollable\">\n          <div className=\"Modal__content\">\n            <ContentComponent />\n          </div>\n        </div>\n        <div className=\"Modal__close\">\n          <CloseIcon onClick={close} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { CAPACITY_FACTORS } from './constants'\nimport { round } from './utils'\n\nexport const getAvailable = installed => {\n  return Object.entries(installed)\n    .filter(([powerType]) => powerType !== 'demand')\n    .map(([powerType, installed]) => installed * CAPACITY_FACTORS[powerType])\n    .map(round)\n}\n","import { POWER_COOF, MAX_POWERS } from './constants'\nimport { sum, range } from './utils'\n\nconst INTERVALS = range(21, 5)\nconst REGULATING = ['hydro', 'gas', 'oil']\nconst NON_REGULATING = ['demand', 'nuclear', 'chp', 'coal', 'wind', 'solar']\nconst IS_WEATHER_DEPENDANT = [false, false, false, true, true] // [\"Nuclear\", \"CHP\", \"Coal\", \"Wind\", \"Solar\"]\n\nconst calculateAverageDemand = powerTable => {\n  const demands = powerTable.map(([, demand]) => demand)\n  return Math.round(demands.reduce(sum) / (demands.length + 1))\n}\n\nconst calculateRegulatingPowerDemand = (powers, demand, averageDemand) => {\n  // don't add more weather dependent power if it exceeds average demand\n  const production = powers\n    .map((value, key) => (IS_WEATHER_DEPENDANT[key] ? Math.min(value, averageDemand) : value))\n    .reduce(sum)\n\n  return Math.max(0, demand - production)\n}\n\n/**\n * Calculates utilization factor from powerCoof\n *\n * the share of maximum operational power that is turned off\n * when demand is low, 1 === 100% on\n *\n * @param {number} interval\n * @param {string} powerType\n */\nconst getUtulizationFactor = (interval, powerType) =>\n  1 + POWER_COOF[powerType].map((polystep, i) => polystep * Math.pow(interval, 6 - i)).reduce(sum)\n\n/**\n * Creates table with the power duration\n * power in 5 percent time intervals, 0-100 percent\n */\nexport const getPowers = installed => {\n  const powerTable = INTERVALS.map(interval => {\n    const powers = NON_REGULATING.map(powerType => {\n      const max = installed[powerType] * MAX_POWERS[powerType]\n      const power = Math.round(max * getUtulizationFactor(interval, powerType))\n\n      return Math.max(0, power)\n    })\n\n    return [interval, ...powers]\n  })\n\n  const averageDemand = calculateAverageDemand(powerTable)\n\n  return powerTable.map(row => {\n    const [interval, demand, ...nonRegulatingPowers] = row\n    const [nuclear, chp, coal, wind, solar] = nonRegulatingPowers\n\n    const baseload = Math.min(demand, nuclear + chp + coal)\n\n    const regulating1 = demand - baseload\n    const regulating2 = calculateRegulatingPowerDemand(nonRegulatingPowers, demand, averageDemand)\n    const regulatingDemand = Math.min(regulating1, regulating2)\n\n    const [hydroAvailable, gasAvailable, oilAvailable] = REGULATING.map(\n      powerType => installed[powerType] * MAX_POWERS[powerType]\n    )\n    const hydro = Math.min(regulatingDemand, hydroAvailable)\n    const gas = Math.min(regulatingDemand - hydro, gasAvailable)\n    const oil = Math.min(regulatingDemand - hydro - gas, oilAvailable)\n\n    const regulating = hydro + oil + gas\n    const nonRegulating = nuclear + chp + coal + wind + solar\n\n    const renewables = Math.min(wind + solar, demand - baseload - regulatingDemand, averageDemand)\n    const production = nonRegulating + regulating\n    const deficit = Math.max(0, demand - production)\n\n    const powers = [nuclear, hydro, wind, solar, chp, gas, coal, oil]\n    const types = { baseload, renewables, regulating }\n\n    return { interval, demand, deficit, powers, types }\n  })\n}\n","import { round } from './utils'\nimport { CO2, FUEL, WASTE, KEYS } from './constants'\n\nexport const getExternalities = energy => {\n  const [co2, fuel, waste] = [CO2, FUEL, WASTE].map(table =>\n    energy.map((value, index) => table[KEYS[index]] * value).map(round)\n  )\n\n  const nuclear = round(WASTE.nuclear * energy[0])\n\n  return { co2, fuel, waste, nuclear }\n}\n","import { getAvailable } from './getAvailable'\nimport { getPowers } from './getPowers'\nimport { getEnergy } from './getEnergy'\nimport { getExternalities } from './getExternalities'\nimport { sum, round } from './utils'\nimport { KEYS } from './constants'\n\nexport function getData(data) {\n  const installed = KEYS.map(key => data[key])\n  const available = getAvailable(data)\n\n  const powers = getPowers(data)\n  const energy = getEnergy(powers)\n  const { co2, fuel, waste, nuclear } = getExternalities(energy)\n\n  const totalEnergy = energy.reduce(sum)\n  const totalInstalled = installed.reduce(sum)\n  const totalAvailable = available.reduce(sum)\n  const ratio = round(totalInstalled / totalAvailable)\n\n  const totalCO2 = co2.reduce(sum)\n  const totalWaste = waste.reduce(sum)\n  const totalFuel = fuel.reduce(sum)\n\n  return {\n    installed,\n    available,\n    powers,\n    energy,\n    co2,\n    fuel,\n    waste,\n    nuclear,\n    totalEnergy,\n    totalAvailable,\n    totalInstalled,\n    totalCO2,\n    totalFuel,\n    totalWaste,\n    ratio\n  }\n}\n","import { powerToEnergy, round, average, transpose } from './utils'\n\nexport function getEnergy(powerTable) {\n  return transpose(powerTable.map(({ powers }) => powers))\n    .map(average)\n    .map(powerToEnergy)\n    .map(round)\n}\n","import React from 'react'\nimport Table from '../Table/Table'\nimport { formatNumber } from '../../simulator/utils'\nimport './ExternalitiesTable.css'\n\nexport default function ExternalitiesTable({ current, proposed }) {\n  const currentCO2kWh = current.totalCO2 / current.totalEnergy\n  const proposedCO2kWh = proposed.totalCO2 / proposed.totalEnergy\n\n  const data = [\n    {\n      label: 'Powierzchnia upraw (tysiące kilometrów kwadratowych)',\n      values: ['-', '-', '-']\n    },\n    {\n      label: 'Turbiny wiatrowe (tysiące średniej wielkości wiatraków)',\n      values: ['-', '-', '-']\n    },\n    {\n      label: 'Panele słoneczne (kilometry kwadratowe paneli słonecznych)',\n      values: ['-', '-', '-']\n    },\n    {\n      label: 'Dwutlenek węgla (miliony ton dwutlenku węgla rocznie)',\n      values: [current.totalCO2, proposed.totalCO2, proposed.totalCO2 - current.totalCO2].map(\n        formatNumber({ commaPos: 3, fractionDigits: 0 })\n      )\n    },\n    {\n      label: 'Dwutlenek węgla (gCO₂/kWh)',\n      values: [currentCO2kWh, proposedCO2kWh, proposedCO2kWh - currentCO2kWh].map(\n        formatNumber({ fractionDigits: 0 })\n      )\n    },\n    {\n      label: 'Odpady jądrowe (tony zużytego paliwa jądrowego rocznie)',\n      values: [current.nuclear, proposed.nuclear, proposed.nuclear - current.nuclear].map(\n        formatNumber({ fractionDigits: 0 })\n      )\n    }\n  ]\n\n  return (\n    <Table className=\"ExternalitiesTable\">\n      <thead>\n        <tr>\n          <th>{''}</th>\n          <th>{'Aktualnie'}</th>\n          <th>{'Proponowane'}</th>\n          <th>{'Różnica'}</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map(({ label, values }, index) => (\n          <tr key={index}>\n            <td>{label}</td>\n            {values.map((value, index) => (\n              <td key={index}>{value}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )\n}\n","import React, { Component } from 'react'\nimport * as store from '../../store'\nimport Slider from '../Slider/Slider'\nimport InfoBox from '../InfoBox/InfoBox'\nimport ComparisonTable from '../ComparisonTable/ComparisonTable'\nimport Modal from '../Modal/Modal'\nimport { getData } from '../../simulator'\nimport { INSTALLED_TODAY } from '../../simulator/constants'\nimport { formatNumber, sum } from '../../simulator/utils'\nimport './App.css'\nimport ExternalitiesTable from '../ExternalitiesTable/ExternalitiesTable'\n\nconst installed = store.load()\nconst defaultState = {\n  installed,\n  isModal: false,\n  modalContent: null,\n  isDetails: false,\n  today: getData(INSTALLED_TODAY),\n  results: getData(installed)\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = defaultState\n    this.reset = this.reset.bind(this)\n    this.update = this.update.bind(this)\n    this.toggleDetails = this.toggleDetails.bind(this)\n    this.openModal = this.openModal.bind(this)\n    this.closeModal = this.closeModal.bind(this)\n  }\n\n  update(name, value) {\n    const installed = {\n      ...this.state.installed,\n      [name]: value\n    }\n\n    store.save(installed)\n    this.setState(currentState => ({ ...currentState, installed, results: getData(installed) }))\n  }\n\n  reset() {\n    const installed = store.reset()\n    this.setState(currentState => ({ ...currentState, installed, results: getData(installed) }))\n  }\n\n  toggleDetails() {\n    this.setState(currentState => ({ ...currentState, isDetails: !currentState.isDetails }))\n  }\n\n  openModal(name) {\n    this.setState(currentState => ({ ...currentState, isModal: true, modalContent: name }))\n  }\n\n  closeModal() {\n    this.setState(currentState => ({ ...currentState, isModal: false, modalContent: null }))\n  }\n\n  render() {\n    const { state, update, openModal } = this\n    const { installed, results, today, isDetails, isModal, modalContent } = state\n    const { nuclear, hydro, solar, wind, chp, gas, coal, oil, demand } = installed\n\n    const hasDeficit = demand - results.totalAvailable > 0\n\n    return (\n      <div className=\"App\">\n        <div className=\"row\">\n          <div className=\"column title\">\n            <h1>\n              Kalkulator\n              <br />\n              Miksu\n              <br />\n              <span className=\"colored\">Energetycznego</span>\n            </h1>\n          </div>\n          <div className=\"column lead\">\n            <p>\n              Tutaj masz możliwość decydowania o produkcji energii elektrycznej w Polsce. Wyzwanie\n              polega na posiadaniu wystarczającej mocy, gdy popyt jest najwyszy, przy jak\n              najmniejszych konsekwencjach środowiskowych. Ty budujesz - ty decydujesz!\n            </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"Results column\">\n            <div className=\"row\">\n              <div className=\"column\">\n                <InfoBox\n                  name=\"installed\"\n                  title=\"Moc zainstalowana\"\n                  value={formatNumber({ commaPos: 3, fractionDigits: 1, minFractionDigits: 1 })(\n                    results.totalInstalled\n                  )}\n                  unit={'GW'}\n                  openModal={openModal}\n                />\n                <InfoBox\n                  name=\"available\"\n                  title=\"Moc dostępna\"\n                  value={formatNumber({ commaPos: 3, fractionDigits: 1, minFractionDigits: 1 })(\n                    results.totalAvailable\n                  )}\n                  unit={'GW'}\n                  type={hasDeficit ? 'warning' : ''}\n                  openModal={openModal}\n                />\n                <InfoBox\n                  name=\"ratio\"\n                  title=\"Ratio\"\n                  value={formatNumber({ fractionDigits: 1 })(results.ratio)}\n                />\n              </div>\n              <div className=\"column\">\n                <InfoBox\n                  name=\"emissions\"\n                  title=\"Emisje CO₂\"\n                  value={formatNumber()(results.totalCO2)}\n                  unit={'kt'}\n                  openModal={openModal}\n                />\n                <InfoBox\n                  name=\"nuclearWaste\"\n                  title=\"Odpady jądrowe\"\n                  value={formatNumber({ fractionDigits: 1 })(results.nuclear)}\n                  unit={'kt'}\n                  openModal={openModal}\n                />\n                <InfoBox\n                  name=\"solidWaste\"\n                  title=\"Odpady stałe\"\n                  value={formatNumber()(results.totalWaste)}\n                  unit={'kt'}\n                  openModal={openModal}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"Sliders column\">\n            <div className=\"row\">\n              <div className=\"column\">\n                <Slider\n                  name=\"nuclear\"\n                  title=\"Atom\"\n                  value={nuclear}\n                  update={update}\n                  openModal={openModal}\n                />\n                <Slider\n                  name=\"hydro\"\n                  title=\"Hydro\"\n                  value={hydro}\n                  update={update}\n                  openModal={openModal}\n                />\n                <Slider\n                  name=\"solar\"\n                  title=\"Słońce\"\n                  value={solar}\n                  update={update}\n                  openModal={openModal}\n                />\n                <Slider\n                  name=\"wind\"\n                  title=\"Wiatr\"\n                  value={wind}\n                  update={update}\n                  openModal={openModal}\n                />\n              </div>\n              <div className=\"column\">\n                <Slider\n                  name=\"chp\"\n                  title=\"Kogeneracja\"\n                  value={chp}\n                  update={update}\n                  openModal={openModal}\n                />\n                <Slider name=\"gas\" title=\"Gaz\" value={gas} update={update} openModal={openModal} />\n                <Slider\n                  name=\"coal\"\n                  title=\"Węgiel\"\n                  value={coal}\n                  update={update}\n                  openModal={openModal}\n                />\n                <Slider name=\"oil\" title=\"Ropa\" value={oil} update={update} openModal={openModal} />\n              </div>\n            </div>\n            <div className=\"Buttons\">\n              <button onClick={this.toggleDetails} className=\"DetailsToggle\">\n                {isDetails ? 'ukryj' : 'pokaż'}\n                {' dane szczegółowe'}\n              </button>\n              <button onClick={this.reset} className=\"ResetButton\">\n                Reset\n              </button>\n            </div>\n          </div>\n        </div>\n        {isDetails ? (\n          <div className=\"Details\">\n            <h3>\n              {'Emisje CO'}\n              <sub>2</sub>\n              {' (kt / rok)'}\n            </h3>\n            <ComparisonTable\n              current={today.co2}\n              proposed={results.co2}\n              totalLabel={'Łącznie'}\n              totalFn={arr => arr.reduce(sum)}\n              format={formatNumber()}\n            />\n            <h3>{'Wyprodukowana energia (TWh / rok)'}</h3>\n            <ComparisonTable\n              current={today.energy}\n              proposed={results.energy}\n              totalLabel={'Łącznie'}\n              totalFn={arr => arr.reduce(sum)}\n              format={formatNumber({ fractionDigits: 1 })}\n            />\n            <h3>{'Moc zainstalowana (GW)'}</h3>\n            <ComparisonTable\n              current={today.installed}\n              proposed={results.installed}\n              totalLabel={'Łącznie'}\n              totalFn={arr => arr.reduce(sum)}\n              format={formatNumber({ commaPos: 3, fractionDigits: 1 })}\n            />\n            <h3>{'Moc dostępna (GW)'}</h3>\n            <ComparisonTable\n              current={today.available}\n              proposed={results.available}\n              totalLabel={'Łącznie'}\n              totalFn={arr => arr.reduce(sum)}\n              format={formatNumber({ commaPos: 3, fractionDigits: 1 })}\n            />\n            <h3>{'Wpływ na środowisko'}</h3>\n            <ExternalitiesTable current={today} proposed={results} />\n          </div>\n        ) : null}\n        {isModal && <Modal content={modalContent} close={this.closeModal} />}\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}